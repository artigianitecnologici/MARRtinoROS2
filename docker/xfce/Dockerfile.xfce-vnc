FROM ubuntu:jammy
# -20240808

ARG TARGETPLATFORM
ARG Dynamixel=false
ARG Gazebo=false

# Install ROS
ENV ROS_DISTRO humble
# desktop or ros-base
ARG INSTALL_PACKAGE=desktop

LABEL maintainer="ferrarini09@gmail.com>"

SHELL ["/bin/bash", "-c"]

# Upgrade OS
RUN apt-get update -q && \
    DEBIAN_FRONTEND=noninteractive apt-get upgrade -y && \
    apt-get autoclean && \
    apt-get autoremove && \
    rm -rf /var/lib/apt/lists/*

# Install XFCE Desktop Environment
RUN apt-get update -q && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y \
        xfce4 xfce4-goodies \
        tigervnc-standalone-server tigervnc-common \
        supervisor wget curl gosu git sudo python3-pip tini tmux netcat nano \
        build-essential vim sudo lsb-release locales \
        bash-completion tzdata terminator dos2unix && \
    apt-get autoclean && \
    apt-get autoremove && \
    rm -rf /var/lib/apt/lists/*

# noVNC and Websockify
RUN git clone https://github.com/AtsushiSaito/noVNC.git -b add_clipboard_support /usr/lib/novnc
RUN pip install git+https://github.com/novnc/websockify.git@v0.10.0
RUN ln -s /usr/lib/novnc/vnc.html /usr/lib/novnc/index.html

# Set remote resize function enabled by default
RUN sed -i "s/UI.initSetting('resize', 'off');/UI.initSetting('resize', 'remote');/g" /usr/lib/novnc/app/ui.js

# Disable auto update and crash report
# RUN sed -i 's/Prompt=.*/Prompt=never/' /etc/update-manager/release-upgrades
# RUN sed -i 's/enabled=1/enabled=0/g' /etc/default/apport

# Install Chromium
RUN apt-get update -q && \
    apt-get install -y \
        chromium-browser \
        fonts-liberation && \
    apt-get autoclean && \
    apt-get autoremove && \
    rm -rf /var/lib/apt/lists/*

# Install shellinabox
RUN apt-get update -q && \
    apt-get install -y shellinabox 

# ROS Installation
RUN apt-get update -q && \
    apt-get install -y curl gnupg2 lsb-release && \
    curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg && \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null && \
    apt-get update -q && \
    apt-get install -y ros-${ROS_DISTRO}-${INSTALL_PACKAGE} \
    python3-argcomplete \
    python3-colcon-common-extensions \
    python3-rosdep python3-vcstool && \
    rosdep init && \
    rm -rf /var/lib/apt/lists/*

RUN rosdep update

RUN echo -e "\033[1;32m=== Create user ubuntu \033[0m"
RUN useradd -m -s /bin/bash ubuntu && \
    echo "ubuntu:ubuntu" | chpasswd && \
    usermod -aG sudo ubuntu && \
    echo "ubuntu ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

# Gazebo installation
RUN if [ "$Gazebo" = "true" ]; then \
    apt-get update -q && \
    apt-get install -y \
        gazebo \
        ros-${ROS_DISTRO}-gazebo-ros-pkgs \
        ros-${ROS_DISTRO}-ros-gz && \
    rm -rf /var/lib/apt/lists/*; \
    fi

# Additional ROS packages
RUN apt-get update -q && \
    apt-get install -y \
        ros-humble-depthai-ros \ 
        ros-humble-rtabmap-ros \
        ros-humble-cartographer \
        ros-humble-cartographer-ros \
        ros-humble-navigation2 \
        ros-humble-nav2-bringup \
        ros-humble-v4l2-camera \
        ros-humble-camera-calibration-parsers \
        ros-humble-camera-info-manager \
        ros-humble-launch-testing-ament-cmake \
        ros-humble-robot-localization \
        ros-humble-rosbridge-server \
        ros-humble-joy \
        ros-humble-rplidar-ros \
        ros-humble-joint-state-publisher && \
    rm -rf /var/lib/apt/lists/*

# MARRtino setup
RUN mkdir -p /home/ubuntu/marrtinorobot2_ws/src && \ 
    mkdir -p /home/ubuntu/src && \
    cd /home/ubuntu/src && \
    git clone https://github.com/artigianitecnologici/MARRtinoROS2 . --filter=tree:0

WORKDIR /home/ubuntu/marrtinorobot2_ws/src

RUN cd /home/ubuntu/marrtinorobot2_ws/src && \ 
    ln -s /home/ubuntu/src/DynamixelSDK . && \
    ln -s /home/ubuntu/src/dynamixel-workbench . && \
    ln -s /home/ubuntu/src/dynamixel-workbench-msgs .  && \
    ln -s /home/ubuntu/src/marrtinorobot2/marrtinorobot2_base . && \
    ln -s /home/ubuntu/src/marrtinorobot2/marrtinorobot2_bringup . && \
    ln -s /home/ubuntu/src/marrtinorobot2/marrtinorobot2_description . && \
    ln -s /home/ubuntu/src/marrtinorobot2/marrtinorobot2_webinterface . && \
    ln -s /home/ubuntu/src/marrtinorobot2/marrtinorobot2_navigation . && \
    ln -s /home/ubuntu/src/marrtinorobot2/marrtinorobot2_vision . && \
    ln -s /home/ubuntu/src/marrtinorobot2/marrtinorobot2_voice . && \
    ln -s /home/ubuntu/src/marrtinorobot2/marrtinorobot2_cartographer . && \
    ln -s /home/ubuntu/src/marrtinorobot2/marrtinorobot2_dynamixel . && \
    ln -s /home/ubuntu/src/m-explore-ros2/explore . && \
    ln -s /home/ubuntu/src/ldlidar_stl_ros2 . && \
    ln -s /home/ubuntu/src/vizanti . 

WORKDIR /home/ubuntu/marrtinorobot2_ws

RUN cd /home/ubuntu/marrtinorobot2_ws && \
    cp /home/ubuntu/src/install/script/* .

# Final configuration for the 'ubuntu' user
USER ubuntu
RUN rosdep update && \
    rosdep install --from-paths src --ignore-src -r -y
USER root

WORKDIR /home/ubuntu

RUN source /opt/ros/$ROS_DISTRO/setup.bash && \
    colcon build && \
    source /home/ubuntu/marrtinorobot2_ws/install/setup.bash

# Setup environment
COPY setup_environment.sh /home/ubuntu/setup_environment.sh 
RUN chmod +x /home/ubuntu/setup_environment.sh
RUN /home/ubuntu/setup_environment.sh

RUN if [ "$Gazebo" = "true" ]; then \
    echo "export GAZEBO_MODEL_PATH=~/.gazebo/models" && \
    echo "export GAZEBO_RESOURCE_PATH=~/.gazebo" ; \
    fi

COPY ./entrypoint.sh /
RUN dos2unix /entrypoint.sh
ENTRYPOINT [ "/bin/bash", "-c", "/entrypoint.sh && /home/ubuntu/src/marrtinorobot2/bringup/1-bringup.bash -docker" ]

ENV USER ubuntu
ENV PASSWD ubuntu
